<project basedir="." name="Test Automation">
    <property name="src.dir" value="${basedir}/java/src"/>
    <property name="resources.dir" value="${basedir}/java/resources"/>
    <property name="classes.dir" value="${basedir}/java/classes/main"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="testautomation.jar" value="${build.dir}/testautomation.jar"/>

    <path id="testautomation.classpath">
        <file file="${testautomation.jar}"/>
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="clean" description="cleans build output">
        <delete dir="${classes.dir}" quiet="true" includeemptydirs="true"/>
        <delete dir="${build.dir}" quiet="true" includeemptydirs="true"/>
    </target>

    <target name="resources">
        <copy todir="${classes.dir}">
            <fileset dir="${resources.dir}"/>
        </copy>
    </target>

    <target name="build" depends="resources" description="sets up the environment for test execution">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${build.dir}"/>
        <javac debug="true"
            srcdir="${src.dir}"
            destdir="${classes.dir}"
            includeAntRuntime="false"
            classpathref="testautomation.classpath"/>
        <jar basedir="${classes.dir}" jarfile="${testautomation.jar}"/>
    </target>

    <target name="run-example" description="run command-line example">
        <java classname="testautomation.examples.${example}"
            failonerror="true"
            classpathref="testautomation.classpath"/>
    </target>
</project>
